@model jdean_budgeter.Models.CodeFirst.Transaction

@{
    ViewBag.Title = "Create";
}

@*<div class="row">
        <div class="col-sm-6">
            <div class="panel panel-default">
                <div class="panel-heading panel-heading-divider">Basic Form<span class="panel-subtitle">This is the default bootstrap form layout</span></div>
                <div class="panel-body">
                    <form>
                        <div class="form-group mt-1">

    <label for="emailExample1">Email address</label>
    <input id="emailExample1" type="email" placeholder="Enter email" class="form-control">
                        </div>
    <div class="form-group">
        <label>Password</label>
        <input type="password" placeholder="Enter password" class="form-control">
    </div>
    <div class="row pt-5">
        <div class="col-6">
            <label class="custom-control custom-checkbox mt-2">
                <input type="checkbox" class="custom-control-input"><span class="custom-control-indicator"></span><span class="custom-control-description">Remember me</span>
            </label>
        </div>
        <div class="col-6">
            <p class="text-right">
                <button type="submit" class="btn btn-space btn-primary">Submit</button>
                <button class="btn btn-space btn-secondary">Cancel</button>
            </p>
        </div>
    </div>*@
@*</form>
            </div>
        </div>
    </div>
    </div>*@
<div class="row">
    <div class="col-sm-6">
        <div class="panel panel-default">
            <div class="panel-heading panel-heading-divider">Create New Transaction<span class="panel-subtitle"></span></div>
            <div class="panel-body">

              
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()


                        <div class="form-group mt-1">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>



                            <div class="form-group">
                                @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.RecAmt,"Reconciled", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.RecAmt, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.RecAmt, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.RecStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.RecStatus)
                                        @Html.ValidationMessageFor(model => model.RecStatus, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.PmtDate, "Date",htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.PmtDate, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PmtDate, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            @*<div class="form-group">
                        @Html.LabelFor(model => model.BudgetId, "BudgetId", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("BudgetId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.BudgetId, "", new { @class = "text-danger" })
                        </div>
                    </div>*@
                            <div class="form-group">
                                @Html.LabelFor(model => model.BankAccountId, "Account", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("BankAccountId", null, "Choose...", htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.BankAccountId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.CategoryId, "Category", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("CategoryId", null, "Choose...", htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                               Check for @Html.LabelFor(model => model.Credit, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    <div class="checkbox">
                                        @Html.EditorFor(model => model.Credit)
                                        @Html.ValidationMessageFor(model => model.Credit, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Create" class="btn btn-primary" />
                                </div>
                            </div>
                    } 
</div>

                   
            </div>
        </div>
    </div>
</div>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
